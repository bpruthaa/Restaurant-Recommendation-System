# -*- coding: utf-8 -*-
"""Restaurent Recommendation System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZnnLnWtSMxQB_2i_WIKMpfK_9aPgXA_m

A geospatial recommendation system suggests points of interest (POIs) like restaurants, parks, or shops to users based on their location and preferences. Here's a breakdown of the project using Python:

Data Sources:

    POI Data:
        Public datasets from government agencies or platforms like OpenStreetMap (https://www.openstreetmap.org/) containing information like location (latitude/longitude), category (restaurant, park, etc.), and basic attributes (name, rating).
    User Data:
        Simulated user data with location information (e.g., home address) and preferences (e.g., preferred cuisines, desired activity level). You can create this data for educational purposes.
"""

import pandas as pd
from geopy.distance import geodesic

# Sample POI data
poi_data = {
    'name': ['Restaurant A', 'Park B', 'Shop C'],
    'latitude': [37.77, 37.78, 37.76],
    'longitude': [-122.43, -122.42, -122.45],
    'category': ['Italian', 'Park', 'Electronics']
}

# Sample user data
user_data = {
    'latitude': 37.775,
    'longitude': -122.44,
    'preferred_category': 'Italian'
}

# Convert data to DataFrames
df_poi = pd.DataFrame(poi_data)
df_user = pd.DataFrame(user_data)

# Calculate distance from user location to each POI
distances = []
for index, row in df_poi.iterrows():
    poi_location = (row['latitude'], row['longitude'])
    user_location = (df_user['latitude'].values[0], df_user['longitude'].values[0])
    distance = geodesic(poi_location, user_location).meters
    distances.append(distance)

df_poi['distance'] = distances

# Filter POIs based on user preference and proximity
filtered_pois = df_poi[(df_poi['category'] == user_data['preferred_category']) & (df_poi['distance'] < 2000)]  # Adjust distance threshold

# Recommend POIs (replace with your desired presentation)
print("Recommended places:")
for index, row in filtered_pois.iterrows():
    print(f"- {row['name']} ({row['distance']} meters away)")